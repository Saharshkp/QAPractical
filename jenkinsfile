pipeline {
    agent any
    environment {
    DOCKER_HUB_CREDS_USR = credentials('docker-hub-usr')
    DOCKER_HUB_CREDS_PSW = credentials('docker-hub-psw')
    }
    stages {
        stage('Pytest') {  
            steps {
                git branch: 'main', url: 'https://github.com/Saharshkp/QAPractical'
                sh '''sudo chmod +x test.sh
                ./test.sh'''
            }
        }
        stage('Pip install'){
            steps {
                git branch: 'main', url: 'https://github.com/Saharshkp/QAPractical'
                sh '''#!/bin/bash
                python3 -m venv venv
                source venv/bin/activate
                pip3 install -r requirements.txt
                pip3 install gunicorn'''
            }
        }
        stage('Ansible Deploy') {
            steps {
                sh "scp -i ~/.ssh/id_rsa docker-compose.yaml spacebook@swarmmanager:/home/spacebook/QAPractical/docker-compose.yaml"
                sh "scp -i ~/.ssh/id_rsa nginx.conf spacebook@swarmmanager:/home/spacebook/QAPractical/nginx.conf"
                sh "ssh spacebook@swarmmanager 'ansible-playbook -i /home/spacebook/QAPractical/ansible/inventory /home/spacebook/QAPractical/ansible/playbook.yaml'"
            }
        }
        stage('Docker login and build'){
                steps{
                    sh '''docker-compose build 
                        docker login --username $DOCKER_HUB_CREDS_USR --password $DOCKER_HUB_CREDS_PSW
                        docker-compose push'''
                }
            }

            stage('Swarm Deployment'){
                steps{

                    sh '''scp docker-compose.yaml spacebook@swarmmanager:/home/spacebook/
                    scp nginx.conf spacebook@swarmmanager:/home/spacebook/
                    ssh spacebook@swarmmanager docker stack deploy --compose-file docker-compose.yaml deployment-stack'''
                }
            }
            
            stage('Curl'){
                steps{
                    sh ''' curl swarmmanager
                    curl swarmworker
                    '''
                }
            }
    }
}
